package dev.application.domain.repository;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Select;

import dev.common.entity.BookDataEntity;

@Mapper
public interface BookDataRepository {

	@Insert("""
			    INSERT INTO data (
			        seq,
			        condition_result_data_seq_id,
			        home_rank,
			        game_team_category,
			        time,
			        home_team_name,
			        home_score,
			        away_rank,
			        away_team_name,
			        away_score,
			        home_exp,
			        away_exp,
			        home_ball_possesion,
			        away_ball_possesion,
			        home_shoot_all,
			        away_shoot_all,
			        home_shoot_in,
			        away_shoot_in,
			        home_shoot_out,
			        away_shoot_out,
			        home_shoot_blocked,
			        away_shoot_blocked,
			        home_big_chance,
			        away_big_chance,
			        home_corner_kick,
			        away_corner_kick,
			        home_box_shoot_in,
			        away_box_shoot_in,
			        home_box_shoot_out,
			        away_box_shoot_out,
			        home_goal_post,
			        away_goal_post,
			        home_goal_head,
			        away_goal_head,
			        home_keeper_save,
			        away_keeper_save,
			        home_free_kick,
			        away_free_kick,
			        home_off_side,
			        away_off_side,
			        home_foul,
			        away_foul,
			        home_yellow_card,
			        away_yellow_card,
			        home_red_card,
			        away_red_card,
			        home_slow_in,
			        away_slow_in,
			        home_box_touch,
			        away_box_touch,
			        home_pass_count,
			        away_pass_count,
			        home_final_third_pass_count,
			        away_final_third_pass_count,
			        home_cross_count,
			        away_cross_count,
			        home_tackle_count,
			        away_tackle_count,
			        home_clear_count,
			        away_clear_count,
			        home_intercept_count,
			        away_intercept_count,
			        record_time,
			        weather,
			        temparature,
			        humid,
			        judge_member,
			        home_manager,
			        away_manager,
			        home_formation,
					away_formation,
					studium,
					capacity,
					audience,
					home_max_getting_scorer,
					away_max_getting_scorer,
					home_max_getting_scorer_game_situation,
					away_max_getting_scorer_game_situation,
					home_team_home_score,
					home_team_home_lost,
					away_team_home_score,
					away_team_home_lost,
					home_team_away_score,
					home_team_away_lost,
					away_team_away_score,
					away_team_away_lost,
					notice_flg,
					goal_time,
					goal_team_member,
					judge,
					home_team_style,
					away_team_style,
					probablity,
					prediction_score_time,
					register_id,
			        register_time,
			        update_id,
			        update_time
			    ) VALUES (
			        #{seq},
			        #{conditionResultDataSeqId},
			        #{homeRank},
			        #{gameTeamCategory},
			        #{time},
			        #{homeTeamName},
			        #{homeScore},
			        #{awayRank},
			        #{awayTeamName},
			        #{awayScore},
			        #{homeExp},
			        #{awayExp},
			        #{homeBallPossesion},
			        #{awayBallPossesion},
			        #{homeShootAll},
			        #{awayShootAll},
			        #{homeShootIn},
			        #{awayShootIn},
			        #{homeShootOut},
			        #{awayShootOut},
			        #{homeShootBlocked},
			        #{awayShootBlocked},
			        #{homeBigChance},
			        #{awayBigChance},
			        #{homeCornerKick},
			        #{awayCornerKick},
			        #{homeBoxShootIn},
			        #{awayBoxShootIn},
			        #{homeBoxShootOut},
			        #{awayBoxShootOut},
			        #{homeGoalPost},
			        #{awayGoalPost},
			        #{homeGoalHead},
			        #{awayGoalHead},
			        #{homeKeeperSave},
			        #{awayKeeperSave},
			        #{homeFreeKick},
			        #{awayFreeKick},
			        #{homeOffSide},
			        #{awayOffSide},
			        #{homeFoul},
			        #{awayFoul},
			        #{homeYellowCard},
			        #{awayYellowCard},
			        #{homeRedCard},
			        #{awayRedCard},
			        #{homeSlowIn},
			        #{awaySlowIn},
			        #{homeBoxTouch},
			        #{awayBoxTouch},
			        #{homePassCount},
			        #{awayPassCount},
			        #{homeFinalThirdPassCount},
			        #{awayFinalThirdPassCount},
			        #{homeCrossCount},
			        #{awayCrossCount},
			        #{homeTackleCount},
			        #{awayTackleCount},
			        #{homeClearCount},
			        #{awayClearCount},
			        #{homeInterceptCount},
			        #{awayInterceptCount},
			        #{recordTime},
			        #{weather},
			        #{temparature},
			        #{humid},
			        #{judgeMember},
			        #{homeManager},
			        #{awayManager},
			        #{homeFormation},
			        #{awayFormation},
			        #{studium},
			        #{capacity},
			        #{audience},
			        #{homeMaxGettingScorer},
			        #{awayMaxGettingScorer},
			        #{homeMaxGettingScorerGameSituation},
			        #{awayMaxGettingScorerGameSituation},
			        #{homeTeamHomeScore},
			        #{homeTeamHomeLost},
			        #{awayTeamHomeScore},
			        #{awayTeamHomeLost},
			        #{homeTeamAwayScore},
			        #{homeTeamAwayLost},
			        #{awayTeamAwayScore},
			        #{awayTeamAwayLost},
			        #{noticeFlg},
			        #{goalTime},
			        #{goalTeamMember},
			        #{judge},
			        #{homeTeamStyle},
			        #{awayTeamStyle},
			        #{probablity},
			        #{predictionScoreTime},
			        #{registerId},
			       #{registerTime},
			       #{updateId},
			       #{updateTime}
			    )
			""")
	int insert(BookDataEntity entity);

	@Select("""
			        SELECT count(*) as cnt FROM data;
			""")
	int selectCount();
}
