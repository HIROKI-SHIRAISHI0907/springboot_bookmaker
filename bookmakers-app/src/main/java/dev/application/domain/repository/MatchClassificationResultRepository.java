package dev.application.domain.repository;

import java.util.List;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import dev.application.analyze.bm_m019_bm_m020.MatchClassificationResultEntity;

@Mapper
public interface MatchClassificationResultRepository {

	// 既存の insert はそのまま。以下を同インタフェース内に追加
	@Insert({
	    "<script>",
	    "INSERT INTO match_classification_result (",
	    "  classify_mode,",
	    "  data_category,",
	    "  times,",
	    "  home_rank, home_team_name, home_score,",
	    "  away_rank, away_team_name, away_score,",
	    "  home_exp, away_exp,",
	    "  home_in_goal_exp, away_in_goal_exp,",
	    "  home_donation, away_donation,",
	    "  home_shoot_all, away_shoot_all,",
	    "  home_shoot_in, away_shoot_in,",
	    "  home_shoot_out, away_shoot_out,",
	    "  home_block_shoot, away_block_shoot,",
	    "  home_big_chance, away_big_chance,",
	    "  home_corner, away_corner,",
	    "  home_box_shoot_in, away_box_shoot_in,",
	    "  home_box_shoot_out, away_box_shoot_out,",
	    "  home_goal_post, away_goal_post,",
	    "  home_goal_head, away_goal_head,",
	    "  home_keeper_save, away_keeper_save,",
	    "  home_free_kick, away_free_kick,",
	    "  home_offside, away_offside,",
	    "  home_foul, away_foul,",
	    "  home_yellow_card, away_yellow_card,",
	    "  home_red_card, away_red_card,",
	    "  home_slow_in, away_slow_in,",
	    "  home_box_touch, away_box_touch,",
	    "  home_pass_count, away_pass_count,",
	    "  home_final_third_pass_count, away_final_third_pass_count,",
	    "  home_cross_count, away_cross_count,",
	    "  home_tackle_count, away_tackle_count,",
	    "  home_clear_count, away_clear_count,",
	    "  home_intercept_count, away_intercept_count,",
	    "  record_time, weather, temparature, humid,",
	    "  judge_member, home_manager, away_manager,",
	    "  home_formation, away_formation,",
	    "  studium, capacity, audience,",
	    "  home_max_getting_scorer, away_max_getting_scorer,",
	    "  home_max_getting_scorer_game_situation,",
	    "  away_max_getting_scorer_game_situation,",
	    "  home_team_home_score, home_team_home_lost,",
	    "  away_team_home_score, away_team_home_lost,",
	    "  home_team_away_score, home_team_away_lost,",
	    "  away_team_away_score, away_team_away_lost,",
	    "  notice_flg, goal_time, goal_team_member, judge,",
	    "  home_team_style, away_team_style,",
	    "  probablity, prediction_score_time,",
	    "  register_id, register_time, update_id, update_time",
	    ") VALUES ",
	    "<foreach collection='list' item='e' separator=','>",
	    "(",
	    "  #{e.classifyMode},",
	    "  #{e.dataCategory},",
	    "  #{e.times},",
	    "  #{e.homeRank}, #{e.homeTeamName}, #{e.homeScore},",
	    "  #{e.awayRank}, #{e.awayTeamName}, #{e.awayScore},",
	    "  #{e.homeExp}, #{e.awayExp},",
	    "  #{e.homeInGoalExp}, #{e.awayInGoalExp},",
	    "  #{e.homeDonation}, #{e.awayDonation},",
	    "  #{e.homeShootAll}, #{e.awayShootAll},",
	    "  #{e.homeShootIn}, #{e.awayShootIn},",
	    "  #{e.homeShootOut}, #{e.awayShootOut},",
	    "  #{e.homeBlockShoot}, #{e.awayBlockShoot},",
	    "  #{e.homeBigChance}, #{e.awayBigChance},",
	    "  #{e.homeCorner}, #{e.awayCorner},",
	    "  #{e.homeBoxShootIn}, #{e.awayBoxShootIn},",
	    "  #{e.homeBoxShootOut}, #{e.awayBoxShootOut},",
	    "  #{e.homeGoalPost}, #{e.awayGoalPost},",
	    "  #{e.homeGoalHead}, #{e.awayGoalHead},",
	    "  #{e.homeKeeperSave}, #{e.awayKeeperSave},",
	    "  #{e.homeFreeKick}, #{e.awayFreeKick},",
	    "  #{e.homeOffside}, #{e.awayOffside},",
	    "  #{e.homeFoul}, #{e.awayFoul},",
	    "  #{e.homeYellowCard}, #{e.awayYellowCard},",
	    "  #{e.homeRedCard}, #{e.awayRedCard},",
	    "  #{e.homeSlowIn}, #{e.awaySlowIn},",
	    "  #{e.homeBoxTouch}, #{e.awayBoxTouch},",
	    "  #{e.homePassCount}, #{e.awayPassCount},",
	    "  #{e.homeFinalThirdPassCount}, #{e.awayFinalThirdPassCount},",
	    "  #{e.homeCrossCount}, #{e.awayCrossCount},",
	    "  #{e.homeTackleCount}, #{e.awayTackleCount},",
	    "  #{e.homeClearCount}, #{e.awayClearCount},",
	    "  #{e.homeInterceptCount}, #{e.awayInterceptCount},",
	    "  CAST(#{e.recordTime} AS timestamp),",
	    "  #{e.weather}, #{e.temparature}, #{e.humid},",
	    "  #{e.judgeMember}, #{e.homeManager}, #{e.awayManager},",
	    "  #{e.homeFormation}, #{e.awayFormation},",
	    "  #{e.studium}, #{e.capacity}, #{e.audience},",
	    "  #{e.homeMaxGettingScorer}, #{e.awayMaxGettingScorer},",
	    "  #{e.homeMaxGettingScorerGameSituation},",
	    "  #{e.awayMaxGettingScorerGameSituation},",
	    "  #{e.homeTeamHomeScore}, #{e.homeTeamHomeLost},",
	    "  #{e.awayTeamHomeScore}, #{e.awayTeamHomeLost},",
	    "  #{e.homeTeamAwayScore}, #{e.homeTeamAwayLost},",
	    "  #{e.awayTeamAwayScore}, #{e.awayTeamAwayLost},",
	    "  #{e.noticeFlg}, #{e.goalTime}, #{e.goalTeamMember}, #{e.judge},",
	    "  #{e.homeTeamStyle}, #{e.awayTeamStyle},",
	    "  #{e.probablity}, #{e.predictionScoreTime},",
	    "  #{e.registerId}, CAST(#{e.registerTime} AS timestamptz),",
	    "  #{e.updateId}, CAST(#{e.updateTime} AS timestamptz)",
	    ")",
	    "</foreach>",
	    "</script>"
	})
	int insertBatch(@Param("list") List<MatchClassificationResultEntity> list);
}
