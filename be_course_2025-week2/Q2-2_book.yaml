openapi: 3.0.0
info:
  title: Make Book API
  description: 本管理に関するAPI
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
paths:
  /books:
    get:
      summary: 本の一覧の取得
      responses:
        '200':
          description: 本の一覧の取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookAll'
        '500':
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorServerInnerResponse'
  /books/get/{bookid}:
    get:
      summary: 本情報の取得
      parameters:
        - in: path
          name: bookid
          required: true
          description: 本ID
          schema:
            type: string
            example: "00001"
      responses:
        '200':
          description: 本情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: リクエストが不正です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUpdateDeleteGetRequestResponse'
        '404':
          description: 対応するIDが存在しません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGetResponse'
        '500':
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorServerInnerResponse'
  /books/create/{bookid}:
    post:
      summary: 本の作成
      parameters:
        - in: path
          name: bookid
          required: true
          description: 本ID
          schema:
            type: string
            example: "00001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: 本情報作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: リクエストが不正です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCreateRequestResponse'
        '500':
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorServerInnerResponse'
  /books/update/{bookid}:
    patch:
      summary: 本情報の更新
      parameters:
        - in: path
          name: bookid
          required: true
          description: 本ID
          schema:
            type: string
            example: "00001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: 本情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: リクエストが不正です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUpdateDeleteGetRequestResponse'
        '500':
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorServerInnerResponse'
  /books/delete/{bookid}:
    delete:
      summary: 本情報の削除
      parameters:
        - in: path
          name: bookid
          required: true
          description: 本ID
          schema:
            type: string
            example: "00001"
      responses:
        '200':
          description: ユーザー情報削除成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: リクエストが不正です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUpdateDeleteGetRequestResponse'
        '500':
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorServerInnerResponse'
components:
  schemas:
    BookAll:
      type: object
      required:
        - bookid
        - title
        - author
        - pubdate
      properties:
        bookid:
          type: string
          example: "00001"
        title:
          type: string
          example: "エンジニア人生とは"
        author:
          type: string
          example: "HIROKI Shiraishi"
        pubdate:
          type: string
          example: "2025-07-18"
    Book:
      type: object
      required:
        - bookid
        - title
        - author
        - pubdate
      properties:
        bookid:
          type: string
          example: "00001"
        title:
          type: string
          example: "エンジニア人生とは"
        author:
          type: string
          example: "HIROKI Shiraishi"
        pubdate:
          type: string
          example: "2025-07-18"
          
    SuccessResponse:
      type: object
      properties:
        code:
          type: string
          example: 200
        message:
          type: string
          example: 処理成功
          
    ErrorCreateRequestResponse:
      type: object
      properties:
        code:
          type: string
          example: 400
        message:
          type: string
          example: 入力値が不正です
        details:
          type: string
          example: titleは必須です
          
    ErrorUpdateDeleteGetRequestResponse:
      type: object
      properties:
        code:
          type: string
          example: 400
        message:
          type: string
          example: bookidが不正です
          
    ErrorGetResponse:
      type: object
      properties:
        code:
          type: string
          example: 404
        message:
          type: string
          example: 存在しないbookidです
          
    ErrorServerInnerResponse:
      type: object
      properties:
        code:
          type: string
          example: 500
        message:
          type: string
          example: サーバー内エラーです
